###创建型
![](http://7xpxnz.com1.z0.glb.clouddn.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%88%9B%E5%BB%BA%E5%9E%8B%E5%85%A8.png)
####单例模式
**模式意图：**保证类仅有一个实例，并且可以供应用程序全局使用。为了保证这一点，就需要这个类自己创建自己的对象，并且对外有公开的调用方法。

####工厂方法模式
**模式意图：**工厂方法意在分离产品与创建的两个层次，使用户在一个工厂池中可以选择自己想要使用的产品，而忽略其创建过程。

####抽象工厂模式
**模式意图：**提供对象的使用接口，隐藏对象的创建过程。

####创建者模式
**模式意图：**一个对象的创建十分复杂，为了区分构建过程和使用过程，因此分开。使用一个Director类进行对象的创建，Builder规定了这个创建过程。

####原型模式
**模式意图：**由于有些时候，需要在运行时指定对象时哪个类的实例，此时用工厂模式就有些力不从心了。通过原型模式就可以通过拷贝函数clone一个原有的对象，给现在的对象使用，从而创建更多的同类型的对象。


