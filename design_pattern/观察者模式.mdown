场景：
聊天室程序的建立。服务器创建好后，A，B，C三个客户端连上来公开聊天。A向服务器发送数据，服务器端聊天数据改变。我们希望将这些聊天数据分别发给其他在线的客户。也就是说，每个客户端需要更新服务器端获得数据。

公众号上关注了“Java程序员”，当有新的文章时，就将这些文章发送给关注了的人。

上面的场景，我们可以使用观察者模式来处理。我们可以把多个订阅者，客户称之为观察者，需要同时给多个订阅者的数据封装到对象中，称之为目标。

核心
观察者模式主要用于1:N的通知，当一个对象（目标对象Subject或Objservabls）的状态变化时，他需要及时告知一系列对象（观察者对象，Observer）,令它们作出响应。

通知观察者的方式：
推：
每次把通知以广播的方式发送给所有观察者，所有观察者只有被动接受
拉：
观察者知道目标对象变了，至于什么时候获取内容，获取什么内容，都可以自主决定。
